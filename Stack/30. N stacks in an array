///////////////////  m-1 because indexing starts from 0 , in GFG its m , they consider from 0th index

class NStack
{
public:
    int *arr, *top ,*next;
    int n , k , free;
    NStack(int N, int S)
    {
        this -> n = S;
        this -> k = N;
        arr = new int[n];
        top = new int [k];
        next = new int[n];
        free = 0;
        
        
        //initialize arr[]
        for(int i = 0 ; i<n ; i++)
            arr[i] = 0;
        
        //initialize top[]
        for(int i = 0 ; i<k ; i++)
            top[i] = -1;
        
        //initialize next[]
        for(int i = 0 ; i<n-1 ; i++)
            next[i] = i+1;
        next[n-1] = -1;
        
    }

    // Pushes 'X' into the Mth stack. Returns true if it gets pushed into the stack, and false otherwise.
    bool push(int x, int m)
    {
        if(free == -1)
        {
             return false;
        }
          
        else
        {
         int index = free;
           arr[index] = x;
        free = next[index];
        next[index] = top[m-1];
        top[m-1] = index;
        
        return true;
        }
        
        
    }

    // Pops top element from Mth Stack. Returns -1 if the stack is empty, otherwise returns the popped element.
    int pop(int m)
    {
        if(top[m-1] == -1)
            return -1;
        else
        {
            int index = top[m-1];
        top[m-1] = next[index];
        next[index] = free;
        free = index;
       return arr[index];
        }
        
        
       }
};
