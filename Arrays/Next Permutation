void nextPermutation(vector<int>& nums) 
    {
        int n = nums.size() , i , j;
        
        //1. find the first number which is less than successive number, so start from right
        for(i = n-2 ;i>=0 ; i--)
        {
            if(nums[i] < nums[i+1])
                break;
        }
        
        if(i<0)
          reverse(nums.begin() , nums.end());
        //2. find the index which has just higher value than nums[i]
        else
        {
            for( j = n-1 ; j>i ; j--)
            {
                if(nums[j]>nums[i])
                    break;
            }
            
        //3. swap to get next MSB 
            swap(nums[i] , nums[j]);
        
        //4. reverse descending part to get least possible number for this new MSB
            reverse(nums.begin()+i+1,nums.end());
            
        }
    }
