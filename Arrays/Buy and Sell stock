////////////////////// WHEN BUYING AND SELLING ARE ALLOWED ONLY ONCE  (Similar Question  Maximum difference between two elements such that larger 
                                                                                         element appears after the smaller number ) //////////////////////////////

///////// 1. NAIVE APPROACH     TLE   ///////////////////////////

class Solution {
public:
    int maxProfit(vector<int>& prices) 
    {
        int n = prices.size();
        int maxprofit = 0;
        int currprofit = 0;
        for(int i = 0 ; i< n-1 ; i++)
        {
            for(int j = i+1 ; j<n ;j++)
            {
                if(prices[j]>prices[i])
                {
                    currprofit = max(currprofit, prices[j]-prices[i] );
                }
            }
            
            maxprofit = max(currprofit,maxprofit);
        }
        
        return maxprofit;
    }
};


///////////////////// 2.  KEEP TRACK OF MAX_DIFF AND MIN_ELEMENT /////////////////////////////
 int maxProfit(vector<int>& arr) 
    {
        int maxprofit = 0;
        int min_element = arr[0];
        
        for(int i = 1; i<arr.size(); i++)
        {
            if( arr[i] - min_element > maxprofit)
                maxprofit = arr[i] - min_element;
            
            if(arr[i]<min_element)
                min_element = arr[i];
            
            
            
        }
        
        
        
        
        
        return maxprofit;
    }
