When there are two middles , return the first middle

int length (Node* head)
{
    int count =0;
    while(head!=NULL)
    {
        count++;
        head = head -> next;
    }
    return count;
}
Node *midPoint(Node *head)
{
    if(head == NULL || head-> next == NULL  || head -> next -> next == NULL)
        return head;
    
   int len = length(head);

    int x = (len -1)/2;
    Node* curr = head;
    for(int i = 0; i<x ; i++)
    {
         curr = curr -> next;
    }
    return curr;
    
}
