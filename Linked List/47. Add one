Node* reverse( Node* head)
{
    if(head == NULL || head -> next == NULL)
        return head;
    
    Node* rest = reverse(head -> next);
    head -> next -> next = head;
    head -> next = NULL;
    
    return rest;
}
Node* solve(Node* head)
{
    Node *curr = head;
    Node* tail = head;
    int carry = 1, sum = 0;
    
    while( curr != NULL)
    {
         sum = curr -> data + carry;
         carry = (sum>=10) ? 1 : 0;
        sum = sum%10;
        curr -> data = sum;
        tail = curr;
        curr = curr -> next;
    }
    
    if(carry > 0)
    {
        Node* newNode = new Node(carry);
        tail -> next = newNode;
    }
    return head;
}
Node* NextLargeNumber(Node *head) 
{
     head = reverse(head);
     
    head = solve(head);
    
    head = reverse(head);
    
    return head;
    
}

