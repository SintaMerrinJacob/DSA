int helper(int **input, int i, int j, int m , int n)
{
    //base case
    
    if(i == m-1 && j == n-1)
        return input[i][j];
    
    int x = INT_MAX , y = INT_MAX , z = INT_MAX;
   
   
    //move right
    if(j < n-1)
    x = helper(input , i , j+1 , m , n);
    //move down
    if(i<m-1)
     y = helper(input ,i+1, j , m , n );
    //move diagonal
    if(i<m-1 && j<n-1)
     z = helper(input,i+1,j+1,m,n);
    
    return input[i][j] + min(x , (min(y,z)));
    
}

int minCostPath(int **input, int m, int n)
{
	return helper(input , 0 , 0 , m , n);
}
