#include <bits/stdc++.h>
using namespace std;

int helper( string s , string t , int** output )
{
   int m = s.size();
   int n = t.size();
  
   if(m == 0 || n == 0 )
       return 0;
   if(output[m][n] != -1)
     return output[m][n];

    
   
    if(s[0] == t[0])
        output[m][n] =  1 + lcs(s.substr(1) , t.substr(1) ,  output );

  else
  { 
    int a = lcs(s , t.substr(1) ,  output );
    int b = lcs(s.substr(1) , t, output );
    int c = lcs(s.substr(1) , t.substr(1), output );
    output[m][n] =  max( a, max(b,c));
  }

   return output[m][n];

}

int lcs(string s , string t)
{
  int m = s.size();
  int n = t.size();
  int** output = new int* [m+1];
  for(int i = 0 ; i<=m ; i++)
   output[i] = new int[n+1];

  for(int i = 0 ;i<=m ; i++)
  {
    for(int j = 0 ;j<=n ; j++)
    {
      output[i][j] = -1;
    }
  }

  return helper(s,t,output);

}
  

int main()
{
  string s,t;
  cin>>s>>t;
  cout<<lcs(s,t);
  return 0;

}
