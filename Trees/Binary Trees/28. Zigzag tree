vector<vector<int>> zigzagLevelOrder(TreeNode* root) 
    {
        
            
        vector<int>output;
        vector< vector<int> > ans;
        
        if(root == NULL)
            return ans;
        
        if( root->left == NULL && root -> right == NULL)
        {
            output.push_back(root -> val);
            ans.push_back(output);
            return ans;
        }
        
        queue<TreeNode*>q;
        stack<TreeNode*>s;
        
        q.push(root);
        
        int order = 1;
        
        while( !q.empty() )
        {
             int nodecount = q.size();
             while( nodecount > 0)
             {
                 TreeNode *front = q.front();
                 q.pop();
                 if(order == 1)
                {
                  output.push_back(front -> val);
                  if( front -> left != NULL)
                   {
                      q.push( front -> left);
                      s.push( front -> left);
                   }
                 if( front -> right != NULL)
                   {
                       q.push( front -> right);
                       s.push( front -> right);
                   }
                }
            
               else
              {
                  if( front -> left != NULL)
                     q.push( front -> left);
                  if( front -> right != NULL)
                     q.push( front -> right);
              }
                 
                 nodecount --;
             }
            if( !output.empty())
            {
                ans.push_back(output);
                output.clear();
            }
            
             order = order*-1;
             while( !s.empty())
               {
                output.push_back(s.top() -> val);
                s.pop();
               }
             if( !output.empty())
            {
                ans.push_back(output);
                output.clear();
            }
            
        }
        
        
        return ans;
    }
};
