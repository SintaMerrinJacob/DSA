class NQueue
{
    int* arr;
    int* front;
    int* rear;
    int* next;
    int free;
    int k;
    int n;
public:
   
    NQueue(int n, int s)
    {
        k = n;
        n = s;
        free = 0;
        arr = new int[n];
        next = new int[n];
        front = new int[k];
        rear = new int[k];
        
        for(int i = 0 ; i<n ; i++)
            next[i] = i+1;
        next[n-1] = -1;
        
        for(int i = 0; i<k ; i++)
        {
            front[i] = -1;
            rear[i] = -1;
        }
            
           
    }

    
    bool enqueue(int x, int m)
    {
      if(free == -1)
          return false;
        else
        {
            int  index = free;
            arr[index] = x;
            free = next[index];
            if(front[m-1] == -1)
            {
               front[m-1] = index;
            }
            else
            {
                next[rear[m-1]] = index;
                
            }
            next[index] = -1;
            rear[m-1] = index;
            return true;
        }
            
    }

    
    int dequeue(int m)
    {
       if(front[m-1] == -1)
           return -1;
         else
         {
             int index = front[m-1];
             int x = arr[index];
             front[m-1] = next[index];
             next[index] = free;
             free = index;
             
             return x;
         }
    }
};
