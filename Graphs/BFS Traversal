#include<iostream>
#include<vector>
#include<queue>
using namespace std;


void print( vector< vector<int>> graphconnection , int vertex , vector<bool>visited , queue<int>q)
{
    for(int i = 0 ; i<vertex ; i++ )
    {
        if( !visited[i])
        {
            q.push(i);
            visited[i] = true;
            while(!q.empty())
            {
                int front = q.front();
                q.pop();
                cout<<front<<" ";
                for(int j = 0 ; j<vertex ; j++)
                {
                    if( !visited[j] && graphconnection[front][j] == 1)
                    {
                        q.push(j);
                        visited[j] = true;
                    }
                }
            }
        }
    }
}
int main()
{
   int vertex,edge;
   cin>>vertex>>edge;
   vector< vector<int>> graphconnection( vertex , vector<int>(vertex , 0));
   for(int i = 0 ; i<edge ; i++)
   {
       int firstvertex , secondvertex;
       cin>>firstvertex>>secondvertex;
       graphconnection[firstvertex][secondvertex] = 1;
       graphconnection[secondvertex][firstvertex] = 1;
   }
   
   vector<bool>visitedvertex(vertex , false);
   queue<int>q;
   
   print(graphconnection , vertex ,  visitedvertex , q);
   return 0;
   
}


